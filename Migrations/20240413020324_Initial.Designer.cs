// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RentalMotor.Api.Repository.Persistence;

#nullable disable

namespace RentalMotor.Api.Migrations
{
    [DbContext(typeof(RentalMotorDbContext))]
    [Migration("20240413020324_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RentalMotor.Api.Entities.Cnh", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int[]>("CnhCategories")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("ImagenCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberCnh")
                        .HasColumnType("integer");

                    b.Property<string>("UserMotorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserMotorId")
                        .IsUnique();

                    b.ToTable("Cnh");
                });

            modelBuilder.Entity("RentalMotor.Api.Entities.UserMotor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("usersMotors");
                });

            modelBuilder.Entity("RentalMotor.Api.Entities.Cnh", b =>
                {
                    b.HasOne("RentalMotor.Api.Entities.UserMotor", null)
                        .WithOne("Cnh")
                        .HasForeignKey("RentalMotor.Api.Entities.Cnh", "UserMotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentalMotor.Api.Entities.UserMotor", b =>
                {
                    b.Navigation("Cnh");
                });
#pragma warning restore 612, 618
        }
    }
}
